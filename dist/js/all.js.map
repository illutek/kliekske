{"version":3,"sources":["popup-close.js","smooth-scroll.js","wow-init.js"],"names":["$","document","ready","on","e","target","this","window","location","hash","jQuery","not","click","event","pathname","replace","hostname","length","slice","preventDefault","animate","scrollTop","offset","top","$target","focus","is","attr","WOW","boxClass","animateClass","mobile","live","callback","box","scrollContainer","init"],"mappings":"CAGA,SAAAA,GACAA,EAAAC,UAAAC,MAAA,WAEAF,EAAA,oBAAAG,GAAA,QAAA,SAAAC,GACAA,EAAAC,SAAAC,OAGAC,OAAAC,SAAAC,KAAA,eAPA,CAWAC,QCTA,SAAAV,GACAA,EAAAC,UAAAC,MAAA,WAIAF,EAAA,sCAEAW,IAAA,cACAA,IAAA,eACAC,MAAA,SAAAC,GAEA,IAOAR,EANAG,SAAAM,SAAAC,QAAA,MAAA,KAAAT,KAAAQ,SAAAC,QAAA,MAAA,KAEAP,SAAAQ,UAAAV,KAAAU,WAIAX,GADAA,EAAAL,EAAAM,KAAAG,OACAQ,OAAAZ,EAAAL,EAAA,SAAAM,KAAAG,KAAAS,MAAA,GAAA,MAEAD,SAEAJ,EAAAM,iBACAnB,EAAA,cAAAoB,QAAA,CACAC,UAAAhB,EAAAiB,SAAAC,KACA,IAAA,WAGA,IAAAC,EAAAxB,EAAAK,GAEA,GADAmB,EAAAC,QACAD,EAAAE,GAAA,UACA,OAAA,EAEAF,EAAAG,KAAA,WAAA,MACAH,EAAAC,eAlCA,CA0CAf,QCvBAA,OAnBAT,UAAAC,MAAA,WAEA,IAAA0B,IACA,CACAC,SAAA,MACAC,aAAA,WACAR,OAAA,EACAS,QAAA,EACAC,MAAA,EACAC,SAAA,SAAAC,KAIAC,gBAAA,OAGAC","file":"all.js","sourcesContent":["/**\r\n * Created by Stefan on 7/03/2018.\r\n */\r\n(function ($) {\r\n    $(document).ready(function () {\r\n\r\n        $('.management__bcg').on('click', function(e) {\r\n            if (e.target !== this)\r\n                return;\r\n\r\n            window.location.hash = 'contact';\r\n        });\r\n\r\n    });\r\n})(jQuery);","/**\r\n * Created by Stefan on 2018-03-13\r\n *\r\n */\r\n\r\n(function ($) {\r\n    $(document).ready(function () {\r\n\r\n        // Select all links with hashes\r\n        // changed from # to #section-contact-smooth does't work in combination with the popup management\r\n        $('a[href*=\"#section-contact-smooth\"]')\r\n        // Remove links that don't actually link to anything\r\n            .not('[href=\"#\"]')\r\n            .not('[href=\"#0\"]')\r\n            .click(function(event) {\r\n                // On-page links\r\n                if (\r\n                    location.pathname.replace(/^\\//, '') == this.pathname.replace(/^\\//, '')\r\n                    &&\r\n                    location.hostname == this.hostname\r\n                ) {\r\n                    // Figure out element to scroll to\r\n                    var target = $(this.hash);\r\n                    target = target.length ? target : $('[name=' + this.hash.slice(1) + ']');\r\n                    // Does a scroll target exist?\r\n                    if (target.length) {\r\n                        // Only prevent default if animation is actually gonna happen\r\n                        event.preventDefault();\r\n                        $('html, body').animate({\r\n                            scrollTop: target.offset().top\r\n                        }, 1000, function() {\r\n                            // Callback after animation\r\n                            // Must change focus!\r\n                            var $target = $(target);\r\n                            $target.focus();\r\n                            if ($target.is(\":focus\")) { // Checking if the target was focused\r\n                                return false;\r\n                            } else {\r\n                                $target.attr('tabindex','-1'); // Adding tabindex for elements not focusable\r\n                                $target.focus(); // Set focus again\r\n                            };\r\n                        });\r\n                    }\r\n                }\r\n            });\r\n\r\n    });\r\n})(jQuery);","/**\r\n * Created by stefan on 05-03-2018.\r\n *\r\n */\r\n(function ($) {\r\n    $(document).ready(function () {\r\n\r\n        var wow = new WOW(\r\n            {\r\n                boxClass: 'wow',      // animated element css class (default is wow)\r\n                animateClass: 'animated', // animation css class (default is animated)\r\n                offset: 0,          // distance to the element when triggering the animation (default is 0)\r\n                mobile: true,       // trigger animations on mobile devices (default is true)\r\n                live: true,       // act on asynchronously loaded content (default is true)\r\n                callback: function (box) {\r\n                    // the callback is fired every time an animation is started\r\n                    // the argument that is passed in is the DOM node being animated\r\n                },\r\n                scrollContainer: null // optional scroll container selector, otherwise use window\r\n            }\r\n        );\r\n        wow.init();\r\n\r\n    });\r\n})(jQuery);"]}